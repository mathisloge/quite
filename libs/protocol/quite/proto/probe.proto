syntax = "proto3";
package quite.proto;

import "quite/proto/common.proto";
import "quite/proto/keyboard.proto";
import "quite/proto/mouse.proto";
import "quite/proto/types.proto";
import "quite/proto/metatype.proto";

service ProbeService {
    rpc FindObject(ObjectRequest) returns (ObjectReply) {}
    rpc GetObjectProperties(GetObjectPropertiesRequest) returns (GetObjectPropertiesResponse) {}

    rpc MouseAction(MouseActionRequest) returns (VoidResponse) {}
    rpc CreateScreenshot(ScreenshotRequest) returns (ImageResponse) {};

    rpc MetaTypeFromObject(MetaTypeFromObjectRequest) returns (MetaTypeFromObjectResponse) {};
}

message ObjectRequest {
  ObjectSearchQuery query = 1;
}

message ObjectReply {
  uint64 object_id = 1; // the internal id assigned by the probe
}

message GetObjectPropertiesRequest {
  uint64 object_id = 1;
  repeated string property_names = 2;
}

message GetObjectPropertiesResponse {
  map<string, Value> property_values = 1;
}

message MouseActionRequest {
  uint64 object_id = 1;
  MouseAction mouse_action = 2;
  MouseButton mouse_button = 3;
  optional KeyboardModifierKey modifier_key = 4;
  optional uint32 delay_ms = 5; // delay between press and release
  optional Vector2F relative_point = 6; // the (click) point relative to the object coordinates. 
}


message VoidResponse {
}

message ImageMetadata {
  uint32 width = 1;
  uint32 height = 2;
}
message ImageResponse {
  ImageMetadata metadata = 1;
  bytes data = 2;
}

message ScreenshotRequest {
  uint64 object_id = 1;
}

message MetaTypeFromObjectRequest {
  uint64 object_id = 1;
}

message MetaTypeFromObjectResponse {
  MetaObject meta_object = 1;
}
