{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>quite enables reliable end-to-end testing for qt applications.</p> <p>GET STARTED Github</p>"},{"location":"building/","title":"Building","text":""},{"location":"building/#build-against-system-packages","title":"Build against system packages","text":"<p>By default, most dependencies are fetched with CPM.cmake.</p> <p>If you prefer to use system-installed packages instead of downloading them directly, configure CPM with one of these options:</p> <ul> <li><code>CPM_USE_LOCAL_PACKAGES=ON</code></li> <li><code>CPM_LOCAL_PACKAGES_ONLY=ON</code></li> </ul> <p>See the CPM reference for details.</p> <p>Tip</p> <p>Use <code>CPM_LOCAL_PACKAGES_ONLY=ON</code> when integrating with package managers such as Conan or vcpkg. This ensures CPM won\u2019t try to fetch sources remotely.</p>"},{"location":"building/#general-dependencies","title":"General dependencies","text":"<ul> <li>Boost &gt;= <code>1.83.0</code></li> <li>gRPC &gt;= <code>1.51.1</code></li> <li>fmt &gt;= <code>11.0.0</code></li> <li>Quill &gt;= <code>10.0.0</code></li> <li>EnTT &gt;= <code>3.15.0</code></li> <li>stdexec &gt;= <code>daf12bcc46438f88b3c78212363f7b6531338780</code></li> <li>asio-grpc &gt;= <code>3.3.0</code></li> <li>JSON for Modern C++ &gt;= <code>3.11.0</code></li> <li>stb &gt;= <code>f0569113c93ad095470c54bf34a17b36646bbbb5</code></li> </ul>"},{"location":"building/#cmake-options","title":"CMake options","text":"<p>The build can be customized with several CMake options:</p>"},{"location":"building/#quite_build_remote_manager","title":"<code>QUITE_BUILD_REMOTE_MANAGER</code>","text":"<ul> <li>Default: <code>ON</code></li> <li>Description: Builds the remote-manager application.</li> <li>Introduced dependencies:<ul> <li>CLI11 \u2265 <code>2.4.0</code></li> </ul> </li> </ul>"},{"location":"building/#quite_build_test_api","title":"<code>QUITE_BUILD_TEST_API</code>","text":"<ul> <li>Default: <code>ON</code></li> <li>Description: Builds the C++ testing API.</li> </ul>"},{"location":"building/#quite_build_python_test_api","title":"<code>QUITE_BUILD_PYTHON_TEST_API</code>","text":"<ul> <li>Default: <code>ON</code></li> <li>Description: Builds the Python testing API module.</li> <li>Dependencies: Requires <code>QUITE_BUILD_TEST_API=ON</code>.</li> <li>Introduced dependencies:<ul> <li>pybind11 \u2265 <code>3.0.0</code></li> </ul> </li> </ul> <p>See Python Usage for details.</p>"},{"location":"building/#quite_build_probe_qt","title":"<code>QUITE_BUILD_PROBE_QT</code>","text":"<ul> <li>Default: <code>ON</code></li> <li>Description: Builds the Qt probe.</li> <li>Introduced dependencies:<ul> <li>Qt \u2265 <code>6.5.0</code></li> </ul> </li> </ul>"},{"location":"contributing/","title":"Contributing","text":""},{"location":"contributing/#got-a-question-or-problem","title":"Got a Question or Problem?","text":"<p>Do not open issues for general support questions as I want to keep GitHub issues for bug reports and feature requests. If you are a company, you can reach out to <code>support@quite.rocks</code> to acquire a support contract or use the discussions section.</p> <p>To save your and my time, I will systematically close all issues that are requests for general support and redirect you to <code>support@quite.rocks</code> or the discussions section.</p>"},{"location":"contributing/#found-a-bug","title":"Found a Bug?","text":"<p>If you find a bug in the source code, you can help me by submitting an issue to the GitHub Repository.</p>"},{"location":"contributing/#submitting-a-pull-request-pr","title":"Submitting a Pull Request (PR)","text":"<p>Before you start on working on a larger fix or feature, please get in touch with me via the GitHub Issue Tracker to streamline any work.</p>"},{"location":"contributing/#coding-rules","title":"Coding Rules","text":"<p>To ensure consistency throughout the source code, keep these rules in mind as you are working:</p> <ul> <li>Follow the \"Commit Message Format\"</li> <li>Add tests</li> <li>TBD</li> </ul>"},{"location":"contributing/#commit-message-format","title":"Commit Message Format","text":"<p>I'm using the angular commit message format.</p> <p>The types should be used as described.</p>"},{"location":"contributing/#scope","title":"Scope","text":"<ul> <li>protocol</li> <li>python</li> <li>remote-manager</li> <li>client</li> <li>core</li> <li>manager</li> <li>probe</li> <li>probeqt</li> <li>testing</li> <li>examples (note: this is currently the <code>integration_test</code>)</li> </ul>"},{"location":"getting-started/","title":"Getting Started","text":""},{"location":"getting-started/#introduction","title":"Introduction","text":"<p>quite is an end-to-end testing framework for Qt applications.</p> <p>It provides a simple API that you can use from C++ or Python, while still letting you choose your preferred test framework (e.g. GoogleTest, pytest, Catch2, etc.).</p> <p>With quite, you can:</p> <ul> <li>Stimulate your application (e.g. trigger UI actions).</li> <li>Capture screenshots of controls.</li> <li>Query properties from your application.</li> </ul> <p>To use quite, you\u2019ll need to install two parts:</p> <ol> <li>The Probe \u2013 code injected into your Application Under Test (AUT).</li> <li>The Test API \u2013 the library you use in your test code to talk to the AUT.</li> </ol> <p> Probe Installation  Test API Installation</p> <p>Minimum language and Qt version</p> <ul> <li>Only Qt 6.5 and onward is supported.</li> <li>C++23 required to compile the project.</li> <li>C++17 required to consume the testing API.</li> <li>gcc-13 required to compile the project.</li> <li>currently only tested with gcc and linux.</li> </ul>"},{"location":"getting-started/#installation","title":"Installation","text":""},{"location":"getting-started/#probe","title":"Probe","text":"<p>The probe runs inside your AUT and sets up a gRPC server that quite uses to communicate with your application.</p> <p>You\u2019ll need to add the probe to your application during build time.</p>"},{"location":"getting-started/#install-with-vcpkg","title":"Install with vcpkg","text":"<pre><code>vcpkg install quite[probeqt]\n</code></pre>"},{"location":"getting-started/#install-with-cpmcmake","title":"Install with CPM.cmake","text":"<pre><code>cpmaddpackage(\n  NAME quite\n  URI \"gh:mathisloge/quite@1.3.0\"\n  OPTIONS \"QUITE_BUILD_PROBE_QT ON\"\n)\n</code></pre>"},{"location":"getting-started/#test-api","title":"Test API","text":"<p>The test API is what your test code uses to talk to the AUT\u2019s probe.</p> <p>You can install it for C++ or Python.</p>"},{"location":"getting-started/#vcpkg","title":"vcpkg","text":"<pre><code>vcpkg install quite[testapi]\n</code></pre>"},{"location":"getting-started/#cpmcmake","title":"CPM.cmake","text":"<pre><code>cpmaddpackage(\n  NAME quite\n  URI \"gh:mathisloge/quite@1.3.0\"\n  OPTIONS \"QUITE_BUILD_TEST_API ON\"\n)\n</code></pre>"},{"location":"getting-started/#python","title":"Python","text":"<pre><code>pip3 install https://github.com/mathisloge/quite/archive/refs/tags/v1.3.0.zip\n</code></pre>"},{"location":"probe-setup/","title":"Probe setup","text":"<p>Currently only a compile time link setup is supported. However in the future a <code>LD_PRELOAD</code> step is supported. See #51.</p>"},{"location":"probe-setup/#c","title":"C++","text":"<pre><code>find_package(quite CONFIG REQUIRED)\n\nadd_executable(myApp)\n\ntarget_link_libraries(myApp PRIVATE\n    quite::probe_qt\n)\n</code></pre> <pre><code>#include &lt;quite/probe_qt/probe_qt.hpp&gt;\n\nint main()\n{\n    auto&amp; probe = quite::probe::setup_qt_probe(quite::GrpcServer{.server_address = \"unix:///tmp/grpc_probe.sock\"});\n\n    // normal application setup\n    // no more to do\n}\n</code></pre>"},{"location":"python-usage/","title":"Test usage with python","text":""},{"location":"python-usage/#launch-applications","title":"Launch applications","text":"<p>For application which have an embedded probe setup an AUT can directly be launched.</p> <pre><code>from quite import ProbeManager\n\nprobe_manager = ProbeManager()\napp = probe_manager.launch_qt_probe_application(\n    name=\"my-app-name\", path_to_application=\"path_to_app\"\n)\n</code></pre>"},{"location":"python-usage/#attach-to-applications","title":"Attach to applications","text":"<p>To attach to already running applications attaching can be done via:</p> <pre><code>from quite import ProbeManager\n\nprobe_manager = ProbeManager()\napp = probe_manager.connect_to_probe(\n    name=\"my-app-name\"\n)\n</code></pre>"},{"location":"python-usage/#current-version","title":"Current version","text":"<pre><code>import quite\n\nprint(quite.__version__)\nprint(quite.__version_git_ref__)\n</code></pre>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2025/07/27/hello-world-/","title":"Hello world \ud83c\udf89","text":"<p>I\u2019m excited to introduce quite, an open\u2011source C++ library with python bindings designed to make end\u2011to\u2011end UI testing in Qt feel\u2026 well, not quite so painful.</p> <p>Originally, I planned to release it a bit later, but I now want to test my own applications \u2014 and it\u2019s far easier if the library is already public. \ud83d\ude04</p> <p>For now it's just Qt but I hope that the project is ready to take on other UI frameworks as well. Time will tell.</p>"},{"location":"blog/2025/07/27/hello-world-/#what-does-quite-do","title":"What does quite do?","text":"<p>At its core, quite lets you automate and inspect an application running on any device where you\u2019ve installed a small \u201cremote manager\u201d daemon. From your test code, you can:</p> <ul> <li>Discover any object in the running app and inspect its class name, methods, and properties via the built-in meta-object system (either registered with Qt's meta-system or the one provided by the library)</li> <li>Invoke methods dynamically</li> <li>Read and wait on property values, with configurable timeouts</li> <li>Write values to objects</li> <li>Capture screenshots of individual objects and compare them against reference images</li> <li>Write tests in either C++ or Python, using the same API</li> </ul> <p>This marks the initial release.</p> <p>If you have any questions, feel free to leave a comment below. Bugs or issues can be reported via the GitHub issue tracker.</p> <p>I hope this project proves useful and contributes to improving and stabilizing your application. \ud83c\udf89</p>"},{"location":"blog/archive/2025/","title":"2025","text":""},{"location":"blog/category/general/","title":"General","text":""}]}