<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structfmt" kind="struct" language="C++" prot="public">
    <compoundname>fmt</compoundname>
    <basecompoundref prot="public" virt="non-virtual">formatter&lt; quite::ErrorCode &gt; fmt::formatter</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">formatter&lt; quite::Error &gt; fmt::formatter</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">formatter&lt; quite::meta::Property &gt; fmt::formatter</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">formatter&lt; quite::meta::Method &gt; fmt::formatter</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">formatter&lt; quite::meta::ObjectType &gt; fmt::formatter</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">formatter&lt; quite::meta::MapType &gt; fmt::formatter</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">formatter&lt; quite::meta::ListType &gt; fmt::formatter</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">formatter&lt; quite::meta::EnumType &gt; fmt::formatter</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">formatter&lt; quite::meta::PrimitiveType &gt; fmt::formatter</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">formatter&lt; quite::meta::Type &gt; fmt::formatter</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">formatter&lt; quite::ObjectQuery &gt; fmt::formatter</basecompoundref>
    <innerclass refid="structfmt_1_1formatter_3_01entt_1_1meta__any_01_4" prot="public">fmt::formatter&lt; entt::meta_any &gt;</innerclass>
    <templateparamlist>
    </templateparamlist>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structfmt_1aa68391a96828b71ac6ef9e6baf698428" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto fmt::format</definition>
        <argsstring>(quite::ErrorCode error_code, format_context &amp;ctx) const -&gt; format_context::iterator</argsstring>
        <name>format</name>
        <qualifiedname>fmt::format</qualifiedname>
        <param>
          <type>quite::ErrorCode</type>
          <declname>error_code</declname>
        </param>
        <param>
          <type>format_context &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/include/quite/error.hpp" line="34" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structfmt_1a53cf472866f294f5bc063e8775ffbf99" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto fmt::format</definition>
        <argsstring>(const quite::Error &amp;error, format_context &amp;ctx) const -&gt; format_context::iterator</argsstring>
        <name>format</name>
        <qualifiedname>fmt::format</qualifiedname>
        <param>
          <type>const <ref refid="structquite_1_1Error" kindref="compound">quite::Error</ref> &amp;</type>
          <declname>error</declname>
        </param>
        <param>
          <type>format_context &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/include/quite/error.hpp" line="40" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structfmt_1af23ff55914b015b322f9e53c5768a082" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto fmt::format</definition>
        <argsstring>(const quite::meta::Property &amp;type, format_context &amp;ctx) const -&gt; format_context::iterator</argsstring>
        <name>format</name>
        <qualifiedname>fmt::format</qualifiedname>
        <param>
          <type>const <ref refid="structquite_1_1meta_1_1Property" kindref="compound">quite::meta::Property</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>format_context &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/include/quite/meta/meta_types.hpp" line="80" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structfmt_1af49098cc2afe87ab7894e216b6f08d1d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto fmt::format</definition>
        <argsstring>(const quite::meta::Method &amp;type, format_context &amp;ctx) const -&gt; format_context::iterator</argsstring>
        <name>format</name>
        <qualifiedname>fmt::format</qualifiedname>
        <param>
          <type>const <ref refid="structquite_1_1meta_1_1Method" kindref="compound">quite::meta::Method</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>format_context &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/include/quite/meta/meta_types.hpp" line="86" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structfmt_1aa1eec89591d6ee9b405ca23aff38bb4a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto fmt::format</definition>
        <argsstring>(const quite::meta::ObjectType &amp;type, format_context &amp;ctx) const -&gt; format_context::iterator</argsstring>
        <name>format</name>
        <qualifiedname>fmt::format</qualifiedname>
        <param>
          <type>const <ref refid="structquite_1_1meta_1_1ObjectType" kindref="compound">quite::meta::ObjectType</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>format_context &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/include/quite/meta/meta_types.hpp" line="92" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structfmt_1a93c3b030c227ada15c71c38dc6b07175" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto fmt::format</definition>
        <argsstring>(const quite::meta::MapType &amp;type, format_context &amp;ctx) const -&gt; format_context::iterator</argsstring>
        <name>format</name>
        <qualifiedname>fmt::format</qualifiedname>
        <param>
          <type>const <ref refid="structquite_1_1meta_1_1MapType" kindref="compound">quite::meta::MapType</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>format_context &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/include/quite/meta/meta_types.hpp" line="98" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structfmt_1a84fda09313d6449e0ae24b303b657118" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto fmt::format</definition>
        <argsstring>(const quite::meta::ListType &amp;type, format_context &amp;ctx) const -&gt; format_context::iterator</argsstring>
        <name>format</name>
        <qualifiedname>fmt::format</qualifiedname>
        <param>
          <type>const <ref refid="structquite_1_1meta_1_1ListType" kindref="compound">quite::meta::ListType</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>format_context &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/include/quite/meta/meta_types.hpp" line="104" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structfmt_1a0b5309b37028f18764dca3a172b5904c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto fmt::format</definition>
        <argsstring>(const quite::meta::EnumType &amp;type, format_context &amp;ctx) const -&gt; format_context::iterator</argsstring>
        <name>format</name>
        <qualifiedname>fmt::format</qualifiedname>
        <param>
          <type>const <ref refid="structquite_1_1meta_1_1EnumType" kindref="compound">quite::meta::EnumType</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>format_context &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/include/quite/meta/meta_types.hpp" line="110" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structfmt_1a60f936062142a42327563dc585be291a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto fmt::format</definition>
        <argsstring>(const quite::meta::PrimitiveType &amp;type, format_context &amp;ctx) const -&gt; format_context::iterator</argsstring>
        <name>format</name>
        <qualifiedname>fmt::format</qualifiedname>
        <param>
          <type>const quite::meta::PrimitiveType &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>format_context &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/include/quite/meta/meta_types.hpp" line="116" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structfmt_1aa5582d27901455d0667e0a557c54a2f8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto fmt::format</definition>
        <argsstring>(const quite::meta::Type &amp;type, format_context &amp;ctx) const -&gt; format_context::iterator</argsstring>
        <name>format</name>
        <qualifiedname>fmt::format</qualifiedname>
        <param>
          <type>const quite::meta::Type &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>format_context &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/include/quite/meta/meta_types.hpp" line="122" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structfmt_1a678423f1f174760ddfefc201442c52cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto fmt::format</definition>
        <argsstring>(const quite::ObjectQuery &amp;query, format_context &amp;ctx) const -&gt; format_context::iterator</argsstring>
        <name>format</name>
        <qualifiedname>fmt::format</qualifiedname>
        <param>
          <type>const <ref refid="structquite_1_1ObjectQuery" kindref="compound">quite::ObjectQuery</ref> &amp;</type>
          <declname>query</declname>
        </param>
        <param>
          <type>format_context &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/include/quite/value/object_query.hpp" line="62" column="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>fmt</label>
        <link refid="structfmt"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>formatter&lt; quite::Error &gt; fmt::formatter&lt; std::string_view &gt;</label>
      </node>
      <node id="2">
        <label>formatter&lt; quite::ErrorCode &gt; fmt::formatter&lt; std::string_view &gt;</label>
      </node>
      <node id="12">
        <label>formatter&lt; quite::ObjectQuery &gt; fmt::formatter&lt; std::string_view &gt;</label>
      </node>
      <node id="9">
        <label>formatter&lt; quite::meta::EnumType &gt; fmt::formatter&lt; std::string_view &gt;</label>
      </node>
      <node id="8">
        <label>formatter&lt; quite::meta::ListType &gt; fmt::formatter&lt; std::string_view &gt;</label>
      </node>
      <node id="7">
        <label>formatter&lt; quite::meta::MapType &gt; fmt::formatter&lt; std::string_view &gt;</label>
      </node>
      <node id="5">
        <label>formatter&lt; quite::meta::Method &gt; fmt::formatter&lt; std::string_view &gt;</label>
      </node>
      <node id="6">
        <label>formatter&lt; quite::meta::ObjectType &gt; fmt::formatter&lt; std::string_view &gt;</label>
      </node>
      <node id="10">
        <label>formatter&lt; quite::meta::PrimitiveType &gt; fmt::formatter&lt; std::string_view &gt;</label>
      </node>
      <node id="4">
        <label>formatter&lt; quite::meta::Property &gt; fmt::formatter&lt; std::string_view &gt;</label>
      </node>
      <node id="11">
        <label>formatter&lt; quite::meta::Type &gt; fmt::formatter&lt; std::string_view &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>fmt</label>
        <link refid="structfmt"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>formatter&lt; quite::Error &gt; fmt::formatter&lt; std::string_view &gt;</label>
      </node>
      <node id="2">
        <label>formatter&lt; quite::ErrorCode &gt; fmt::formatter&lt; std::string_view &gt;</label>
      </node>
      <node id="12">
        <label>formatter&lt; quite::ObjectQuery &gt; fmt::formatter&lt; std::string_view &gt;</label>
      </node>
      <node id="9">
        <label>formatter&lt; quite::meta::EnumType &gt; fmt::formatter&lt; std::string_view &gt;</label>
      </node>
      <node id="8">
        <label>formatter&lt; quite::meta::ListType &gt; fmt::formatter&lt; std::string_view &gt;</label>
      </node>
      <node id="7">
        <label>formatter&lt; quite::meta::MapType &gt; fmt::formatter&lt; std::string_view &gt;</label>
      </node>
      <node id="5">
        <label>formatter&lt; quite::meta::Method &gt; fmt::formatter&lt; std::string_view &gt;</label>
      </node>
      <node id="6">
        <label>formatter&lt; quite::meta::ObjectType &gt; fmt::formatter&lt; std::string_view &gt;</label>
      </node>
      <node id="10">
        <label>formatter&lt; quite::meta::PrimitiveType &gt; fmt::formatter&lt; std::string_view &gt;</label>
      </node>
      <node id="4">
        <label>formatter&lt; quite::meta::Property &gt; fmt::formatter&lt; std::string_view &gt;</label>
      </node>
      <node id="11">
        <label>formatter&lt; quite::meta::Type &gt; fmt::formatter&lt; std::string_view &gt;</label>
      </node>
    </collaborationgraph>
    <location file="libs/core/include/quite/error.hpp" line="32" column="1" bodyfile="libs/core/include/quite/error.hpp" bodystart="33" bodyend="35"/>
    <listofallmembers>
      <member refid="structfmt_1aa68391a96828b71ac6ef9e6baf698428" prot="public" virt="non-virtual"><scope>fmt</scope><name>format</name></member>
      <member refid="structfmt_1a53cf472866f294f5bc063e8775ffbf99" prot="public" virt="non-virtual"><scope>fmt</scope><name>format</name></member>
      <member refid="structfmt_1af23ff55914b015b322f9e53c5768a082" prot="public" virt="non-virtual"><scope>fmt</scope><name>format</name></member>
      <member refid="structfmt_1af49098cc2afe87ab7894e216b6f08d1d" prot="public" virt="non-virtual"><scope>fmt</scope><name>format</name></member>
      <member refid="structfmt_1aa1eec89591d6ee9b405ca23aff38bb4a" prot="public" virt="non-virtual"><scope>fmt</scope><name>format</name></member>
      <member refid="structfmt_1a93c3b030c227ada15c71c38dc6b07175" prot="public" virt="non-virtual"><scope>fmt</scope><name>format</name></member>
      <member refid="structfmt_1a84fda09313d6449e0ae24b303b657118" prot="public" virt="non-virtual"><scope>fmt</scope><name>format</name></member>
      <member refid="structfmt_1a0b5309b37028f18764dca3a172b5904c" prot="public" virt="non-virtual"><scope>fmt</scope><name>format</name></member>
      <member refid="structfmt_1a60f936062142a42327563dc585be291a" prot="public" virt="non-virtual"><scope>fmt</scope><name>format</name></member>
      <member refid="structfmt_1aa5582d27901455d0667e0a557c54a2f8" prot="public" virt="non-virtual"><scope>fmt</scope><name>format</name></member>
      <member refid="structfmt_1a678423f1f174760ddfefc201442c52cf" prot="public" virt="non-virtual"><scope>fmt</scope><name>format</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
