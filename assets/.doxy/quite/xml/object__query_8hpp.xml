<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="object__query_8hpp" kind="file" language="C++">
    <compoundname>object_query.hpp</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">entt/meta/meta.hpp</includes>
    <includes local="no">fmt/core.h</includes>
    <includes local="yes">quite/quite_core_export.hpp</includes>
    <includedby refid="client_2include_2quite_2client_2probe_8hpp" local="no">libs/client/include/quite/client/probe.hpp</includedby>
    <includedby refid="object__query_8cpp" local="yes">libs/core/src/value/object_query.cpp</includedby>
    <includedby refid="object__tracker_8hpp" local="no">libs/probeqt/object_tracker.hpp</includedby>
    <includedby refid="test__method__invoker_8cpp" local="no">libs/probeqt/tests/test_method_invoker.cpp</includedby>
    <includedby refid="test__object__tracker_8cpp" local="no">libs/probeqt/tests/test_object_tracker.cpp</includedby>
    <includedby refid="test__property__collector_8cpp" local="no">libs/probeqt/tests/test_property_collector.cpp</includedby>
    <includedby refid="probe__service_8hpp" local="no">libs/protocol/include/quite/proto/client/probe_service.hpp</includedby>
    <includedby refid="rpc__find__object_8cpp" local="no">libs/protocol/src/probe/rpc_find_object.cpp</includedby>
    <includedby refid="testing_2src_2probe_8cpp" local="no">libs/testing/src/probe.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>libs/core/include/quite/value/object_query.hpp</label>
        <link refid="object__query_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>entt/meta/meta.hpp</label>
      </node>
      <node id="4">
        <label>fmt/core.h</label>
      </node>
      <node id="2">
        <label>memory</label>
      </node>
      <node id="5">
        <label>quite/quite_core_export.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>libs/client/include/quite/client/probe.hpp</label>
        <link refid="client_2include_2quite_2client_2probe_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>libs/client/src/basic_probe.hpp</label>
        <link refid="basic__probe_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>libs/client/src/grpc_impl/grpc_probe.hpp</label>
        <link refid="grpc__probe_8hpp_source"/>
      </node>
      <node id="11">
        <label>libs/client/src/grpc_impl/grpc_property.hpp</label>
        <link refid="grpc__property_8hpp_source"/>
      </node>
      <node id="10">
        <label>libs/client/src/grpc_impl/grpc_remote_object.hpp</label>
        <link refid="grpc__remote__object_8hpp_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>libs/client/src/grpc_impl/grpc_value.hpp</label>
        <link refid="grpc__value_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>libs/core/include/quite/value/object_query.hpp</label>
        <link refid="object__query_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>libs/probeqt/injector/mouse_injector.hpp</label>
        <link refid="probeqt_2injector_2mouse__injector_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>libs/probeqt/object_tracker.hpp</label>
        <link refid="object__tracker_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>libs/probeqt/probe_context.hpp</label>
        <link refid="probe__context_8hpp_source"/>
      </node>
      <node id="9">
        <label>libs/protocol/include/quite/proto/client/probe_client.hpp</label>
        <link refid="probe__client_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>libs/protocol/include/quite/proto/client/probe_service.hpp</label>
        <link refid="probe__service_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>libs/protocol/src/client/probe_client_impl.hpp</label>
        <link refid="probe__client__impl_8hpp_source"/>
      </node>
      <node id="14">
        <label>libs/protocol/src/client/probe_service_impl.hpp</label>
        <link refid="probe__service__impl_8hpp_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structquite_1_1ObjectQuery" prot="public">quite::ObjectQuery</innerclass>
    <innerclass refid="classquite_1_1ObjectQueryBuilder" prot="public">quite::ObjectQueryBuilder</innerclass>
    <innerclass refid="structfmt" prot="public">fmt</innerclass>
    <innernamespace refid="namespacequite">quite</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;entt/meta/meta.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fmt/core.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;quite/quite_core_export.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">quite</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QUITE_CORE_EXPORT<sp/>ObjectQueryBuilder;</highlight></codeline>
<codeline lineno="10" refid="structquite_1_1ObjectQuery" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">QUITE_CORE_EXPORT<sp/><ref refid="structquite_1_1ObjectQuery" kindref="compound">ObjectQuery</ref></highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">PropertyMap<sp/>=<sp/>std::unordered_map&lt;std::string,<sp/>entt::meta_any&gt;;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ObjectQuery&gt;<sp/>container;<sp/></highlight><highlight class="comment">//<sp/>use<sp/>a<sp/>shared<sp/>pointer<sp/>here,<sp/>makes<sp/>the<sp/>python<sp/>code<sp/>gen<sp/>much<sp/>easier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>PropertyMap<sp/>properties;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>type_name;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structquite_1_1ObjectQuery" kindref="compound">ObjectQuery</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structquite_1_1ObjectQuery" kindref="compound">ObjectQuery</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structquite_1_1ObjectQuery" kindref="compound">ObjectQuery</ref><sp/>&amp;other)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structquite_1_1ObjectQuery" kindref="compound">ObjectQuery</ref>(<ref refid="structquite_1_1ObjectQuery" kindref="compound">ObjectQuery</ref><sp/>&amp;&amp;other)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structquite_1_1ObjectQuery" kindref="compound">ObjectQuery</ref><sp/>&amp;operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structquite_1_1ObjectQuery" kindref="compound">ObjectQuery</ref><sp/>&amp;other)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structquite_1_1ObjectQuery" kindref="compound">ObjectQuery</ref><sp/>&amp;operator=(<ref refid="structquite_1_1ObjectQuery" kindref="compound">ObjectQuery</ref><sp/>&amp;&amp;other)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structquite_1_1ObjectQuery" kindref="compound">ObjectQuery</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classquite_1_1ObjectQueryBuilder" kindref="compound">ObjectQueryBuilder</ref><sp/>&amp;builder);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structquite_1_1ObjectQuery" kindref="compound">~ObjectQuery</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">};</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classquite_1_1ObjectQueryBuilder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QUITE_CORE_EXPORT<sp/><ref refid="classquite_1_1ObjectQueryBuilder" kindref="compound">ObjectQueryBuilder</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ObjectQuery&gt;<sp/>query_;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classquite_1_1ObjectQueryBuilder" kindref="compound">ObjectQueryBuilder</ref>();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classquite_1_1ObjectQueryBuilder" kindref="compound">ObjectQueryBuilder</ref><sp/>&amp;with_property(std::initializer_list&lt;std::pair&lt;std::string,<sp/>entt::meta_any&gt;&gt;<sp/>props);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classquite_1_1ObjectQueryBuilder" kindref="compound">ObjectQueryBuilder</ref><sp/>&amp;with_property(std::string<sp/>key,<sp/>std::int64_t<sp/>value);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classquite_1_1ObjectQueryBuilder" kindref="compound">ObjectQueryBuilder</ref><sp/>&amp;with_property(std::string<sp/>key,<sp/>std::uint64_t<sp/>value);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classquite_1_1ObjectQueryBuilder" kindref="compound">ObjectQueryBuilder</ref><sp/>&amp;with_property(std::string<sp/>key,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classquite_1_1ObjectQueryBuilder" kindref="compound">ObjectQueryBuilder</ref><sp/>&amp;with_property(std::string<sp/>key,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classquite_1_1ObjectQueryBuilder" kindref="compound">ObjectQueryBuilder</ref><sp/>&amp;with_property(std::string<sp/>key,<sp/>std::string<sp/>value);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classquite_1_1ObjectQueryBuilder" kindref="compound">ObjectQueryBuilder</ref><sp/>&amp;with_parent(std::shared_ptr&lt;ObjectQuery&gt;<sp/>parent);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classquite_1_1ObjectQueryBuilder" kindref="compound">ObjectQueryBuilder</ref><sp/>&amp;with_type(std::string<sp/>type_name);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ObjectQuery&gt;()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="structquite_1_1ObjectQuery" kindref="compound">ObjectQuery</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Factory<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">QUITE_CORE_EXPORT<sp/><ref refid="classquite_1_1ObjectQueryBuilder" kindref="compound">ObjectQueryBuilder</ref><sp/>make_query();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>quite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">QUITE_CORE_EXPORT<sp/><ref refid="structfmt" kindref="compound">fmt</ref>::formatter&lt;quite::ObjectQuery&gt;<sp/>:<sp/>fmt::formatter&lt;std::string_view&gt;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>format(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structquite_1_1ObjectQuery" kindref="compound">quite::ObjectQuery</ref><sp/>&amp;query,<sp/>format_context<sp/>&amp;ctx)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>-&gt;<sp/>format_context::iterator;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="libs/core/include/quite/value/object_query.hpp"/>
  </compounddef>
</doxygen>
