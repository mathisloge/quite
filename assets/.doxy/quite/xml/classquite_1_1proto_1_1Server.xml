<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classquite_1_1proto_1_1Server" kind="class" language="C++" prot="public" final="yes">
    <compoundname>quite::proto::Server</compoundname>
    <innerclass refid="classquite_1_1proto_1_1Server_1_1Impl" prot="public">quite::proto::Server::Impl</innerclass>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classquite_1_1proto_1_1Server_1a7bbc47f1277efd6f60095520b48c0400" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classquite_1_1proto_1_1Server_1_1Impl" kindref="compound">Impl</ref> &gt;</type>
        <definition>std::unique_ptr&lt;Impl&gt; quite::proto::Server::impl_</definition>
        <argsstring></argsstring>
        <name>impl_</name>
        <qualifiedname>quite::proto::Server::impl_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/include/quite/proto/probe/server.hpp" line="40" column="21" bodyfile="libs/protocol/include/quite/proto/probe/server.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classquite_1_1proto_1_1Server_1ab9e13bd1319fbba59c6341d247631998" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>quite::proto::Server::QUITE_DISABLE_COPY</definition>
        <argsstring>(Server)</argsstring>
        <name>QUITE_DISABLE_COPY</name>
        <qualifiedname>quite::proto::Server::QUITE_DISABLE_COPY</qualifiedname>
        <param>
          <type><ref refid="classquite_1_1proto_1_1Server" kindref="compound">Server</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/include/quite/proto/probe/server.hpp" line="28" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classquite_1_1proto_1_1Server_1a0b70be972eb9952fd2b7c11fa962913d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>quite::proto::Server::Server</definition>
        <argsstring>(std::string server_address, ServiceHandle&lt; IProbeHandler &gt; probe_handler, ServiceHandle&lt; core::IMouseInjector &gt; mouse_injector, ServiceHandle&lt; meta::MetaRegistry &gt; meta_registry, ServiceHandle&lt; ValueRegistry &gt; value_registry)</argsstring>
        <name>Server</name>
        <qualifiedname>quite::proto::Server::Server</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>server_address</declname>
        </param>
        <param>
          <type><ref refid="classquite_1_1ServiceHandle" kindref="compound">ServiceHandle</ref>&lt; <ref refid="classquite_1_1proto_1_1IProbeHandler" kindref="compound">IProbeHandler</ref> &gt;</type>
          <declname>probe_handler</declname>
        </param>
        <param>
          <type><ref refid="classquite_1_1ServiceHandle" kindref="compound">ServiceHandle</ref>&lt; <ref refid="classquite_1_1core_1_1IMouseInjector" kindref="compound">core::IMouseInjector</ref> &gt;</type>
          <declname>mouse_injector</declname>
        </param>
        <param>
          <type><ref refid="classquite_1_1ServiceHandle" kindref="compound">ServiceHandle</ref>&lt; <ref refid="classquite_1_1meta_1_1MetaRegistry" kindref="compound">meta::MetaRegistry</ref> &gt;</type>
          <declname>meta_registry</declname>
        </param>
        <param>
          <type><ref refid="classquite_1_1ServiceHandle" kindref="compound">ServiceHandle</ref>&lt; <ref refid="classquite_1_1ValueRegistry" kindref="compound">ValueRegistry</ref> &gt;</type>
          <declname>value_registry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/include/quite/proto/probe/server.hpp" line="29" column="5" bodyfile="libs/protocol/src/probe/server.cpp" bodystart="126" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classquite_1_1proto_1_1Server_1ae6c77f45df448eeaf33258924d644e6f" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>quite::proto::Server::Server</definition>
        <argsstring>(Server &amp;&amp;server) noexcept</argsstring>
        <name>Server</name>
        <qualifiedname>quite::proto::Server::Server</qualifiedname>
        <param>
          <type><ref refid="classquite_1_1proto_1_1Server" kindref="compound">Server</ref> &amp;&amp;</type>
          <declname>server</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/include/quite/proto/probe/server.hpp" line="34" column="5" bodyfile="libs/protocol/src/probe/server.cpp" bodystart="138" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classquite_1_1proto_1_1Server_1a2b122fb07ac3b934cdb683382084c490" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classquite_1_1proto_1_1Server" kindref="compound">Server</ref> &amp;</type>
        <definition>Server &amp; quite::proto::Server::operator=</definition>
        <argsstring>(Server &amp;&amp;server) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>quite::proto::Server::operator=</qualifiedname>
        <param>
          <type><ref refid="classquite_1_1proto_1_1Server" kindref="compound">Server</ref> &amp;&amp;</type>
          <declname>server</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/include/quite/proto/probe/server.hpp" line="35" column="12" bodyfile="libs/protocol/src/probe/server.cpp" bodystart="142" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classquite_1_1proto_1_1Server_1a6a78cf767dc4d24f645f110318f68618" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>quite::proto::Server::~Server</definition>
        <argsstring>()</argsstring>
        <name>~Server</name>
        <qualifiedname>quite::proto::Server::~Server</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/include/quite/proto/probe/server.hpp" line="36" column="5"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/protocol/include/quite/proto/probe/server.hpp" line="25" column="1" bodyfile="libs/protocol/include/quite/proto/probe/server.hpp" bodystart="26" bodyend="41"/>
    <listofallmembers>
      <member refid="classquite_1_1proto_1_1Server_1a7bbc47f1277efd6f60095520b48c0400" prot="private" virt="non-virtual"><scope>quite::proto::Server</scope><name>impl_</name></member>
      <member refid="classquite_1_1proto_1_1Server_1a2b122fb07ac3b934cdb683382084c490" prot="public" virt="non-virtual"><scope>quite::proto::Server</scope><name>operator=</name></member>
      <member refid="classquite_1_1proto_1_1Server_1ab9e13bd1319fbba59c6341d247631998" prot="public" virt="non-virtual"><scope>quite::proto::Server</scope><name>QUITE_DISABLE_COPY</name></member>
      <member refid="classquite_1_1proto_1_1Server_1a0b70be972eb9952fd2b7c11fa962913d" prot="public" virt="non-virtual"><scope>quite::proto::Server</scope><name>Server</name></member>
      <member refid="classquite_1_1proto_1_1Server_1ae6c77f45df448eeaf33258924d644e6f" prot="public" virt="non-virtual"><scope>quite::proto::Server</scope><name>Server</name></member>
      <member refid="classquite_1_1proto_1_1Server_1a6a78cf767dc4d24f645f110318f68618" prot="public" virt="non-virtual"><scope>quite::proto::Server</scope><name>~Server</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
