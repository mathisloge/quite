<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespacequite_1_1proto" kind="namespace" language="C++">
    <compoundname>quite::proto</compoundname>
    <innerclass refid="classquite_1_1proto_1_1Client" prot="public">quite::proto::Client</innerclass>
    <innerclass refid="structquite_1_1proto_1_1FindObjectRpcHandler" prot="public">quite::proto::FindObjectRpcHandler</innerclass>
    <innerclass refid="structquite_1_1proto_1_1GetMetaObjectRpcHandler" prot="public">quite::proto::GetMetaObjectRpcHandler</innerclass>
    <innerclass refid="structquite_1_1proto_1_1GetObjectPropertiesRpcHandler" prot="public">quite::proto::GetObjectPropertiesRpcHandler</innerclass>
    <innerclass refid="structquite_1_1proto_1_1GetViewsRpcHandler" prot="public">quite::proto::GetViewsRpcHandler</innerclass>
    <innerclass refid="classquite_1_1proto_1_1GrpcManager" prot="public">quite::proto::GrpcManager</innerclass>
    <innerclass refid="structquite_1_1proto_1_1InvokeMethodRpcHandler" prot="public">quite::proto::InvokeMethodRpcHandler</innerclass>
    <innerclass refid="classquite_1_1proto_1_1IProbeHandler" prot="public">quite::proto::IProbeHandler</innerclass>
    <innerclass refid="classquite_1_1proto_1_1IProbeService" prot="public">quite::proto::IProbeService</innerclass>
    <innerclass refid="classquite_1_1proto_1_1IValueConverter" prot="public">quite::proto::IValueConverter</innerclass>
    <innerclass refid="classquite_1_1proto_1_1MetaRegistryImpl" prot="public">quite::proto::MetaRegistryImpl</innerclass>
    <innerclass refid="structquite_1_1proto_1_1MouseActionRpcHandler" prot="public">quite::proto::MouseActionRpcHandler</innerclass>
    <innerclass refid="classquite_1_1proto_1_1MouseInjectorImpl" prot="public">quite::proto::MouseInjectorImpl</innerclass>
    <innerclass refid="classquite_1_1proto_1_1ProbeClient" prot="public">quite::proto::ProbeClient</innerclass>
    <innerclass refid="classquite_1_1proto_1_1ProbeClientImpl" prot="public">quite::proto::ProbeClientImpl</innerclass>
    <innerclass refid="classquite_1_1proto_1_1ProbeServiceImpl" prot="public">quite::proto::ProbeServiceImpl</innerclass>
    <innerclass refid="classquite_1_1proto_1_1ProbeValueConverter" prot="public">quite::proto::ProbeValueConverter</innerclass>
    <innerclass refid="structquite_1_1proto_1_1ProtocolVisitor" prot="public">quite::proto::ProtocolVisitor</innerclass>
    <innerclass refid="classquite_1_1proto_1_1Server" prot="public">quite::proto::Server</innerclass>
    <innerclass refid="structquite_1_1proto_1_1SetObjectPropertyRpcHandler" prot="public">quite::proto::SetObjectPropertyRpcHandler</innerclass>
    <innerclass refid="structquite_1_1proto_1_1SnapshotRpcHandler" prot="public">quite::proto::SnapshotRpcHandler</innerclass>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="probe__handler__handle_8hpp_1a480abf0b87de7dd4150075d0114a6aff" prot="public" static="no">
        <type><ref refid="classquite_1_1ServiceHandle" kindref="compound">ServiceHandle</ref>&lt; <ref refid="classquite_1_1proto_1_1IProbeHandler" kindref="compound">IProbeHandler</ref> &gt;</type>
        <definition>using quite::proto::ProbeHandlerHandle = typedef ServiceHandle&lt;IProbeHandler&gt;</definition>
        <argsstring></argsstring>
        <name>ProbeHandlerHandle</name>
        <qualifiedname>quite::proto::ProbeHandlerHandle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/probe/probe_handler_handle.hpp" line="7" column="1" bodyfile="libs/protocol/src/probe/probe_handler_handle.hpp" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rpc__fetch__windows_8hpp_1aca9f726378c05cf0f581036f16a417fa" prot="public" static="no">
        <type>agrpc::ServerRPC&lt;&amp;quite::proto::ProbeService::AsyncService::RequestGetViews &gt;</type>
        <definition>using quite::proto::GetViewsRPC = typedef agrpc::ServerRPC&lt;&amp;quite::proto::ProbeService::AsyncService::RequestGetViews&gt;</definition>
        <argsstring></argsstring>
        <name>GetViewsRPC</name>
        <qualifiedname>quite::proto::GetViewsRPC</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/probe/rpc_fetch_windows.hpp" line="11" column="1" bodyfile="libs/protocol/src/probe/rpc_fetch_windows.hpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rpc__find__object_8hpp_1acf8059ea7936bb53c92eee5eb1bced50" prot="public" static="no">
        <type>agrpc::ServerRPC&lt;&amp;quite::proto::ProbeService::AsyncService::RequestFindObject &gt;</type>
        <definition>using quite::proto::FindObjectRPC = typedef agrpc::ServerRPC&lt;&amp;quite::proto::ProbeService::AsyncService::RequestFindObject&gt;</definition>
        <argsstring></argsstring>
        <name>FindObjectRPC</name>
        <qualifiedname>quite::proto::FindObjectRPC</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/probe/rpc_find_object.hpp" line="12" column="1" bodyfile="libs/protocol/src/probe/rpc_find_object.hpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rpc__invoke__method_8hpp_1a33047fe2fcc9b19d3ed3a5701468baab" prot="public" static="no">
        <type>agrpc::ServerRPC&lt;&amp;quite::proto::ProbeService::AsyncService::RequestInvokeMethod &gt;</type>
        <definition>using quite::proto::InvokeMethodRPC = typedef agrpc::ServerRPC&lt;&amp;quite::proto::ProbeService::AsyncService::RequestInvokeMethod&gt;</definition>
        <argsstring></argsstring>
        <name>InvokeMethodRPC</name>
        <qualifiedname>quite::proto::InvokeMethodRPC</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/probe/rpc_invoke_method.hpp" line="12" column="1" bodyfile="libs/protocol/src/probe/rpc_invoke_method.hpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rpc__meta__find__type_8hpp_1a27270e7c050d0b75a35d6b7a271f932d" prot="public" static="no">
        <type>agrpc::ServerRPC&lt;&amp;quite::proto::MetaService::AsyncService::RequestFindType &gt;</type>
        <definition>using quite::proto::FindTypeRPC = typedef agrpc::ServerRPC&lt;&amp;quite::proto::MetaService::AsyncService::RequestFindType&gt;</definition>
        <argsstring></argsstring>
        <name>FindTypeRPC</name>
        <qualifiedname>quite::proto::FindTypeRPC</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/probe/rpc_meta_find_type.hpp" line="12" column="1" bodyfile="libs/protocol/src/probe/rpc_meta_find_type.hpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rpc__mouse__injection_8hpp_1a69fafbcf757c9e527a4996bd78fe72b1" prot="public" static="no">
        <type>agrpc::ServerRPC&lt;&amp;quite::proto::ProbeService::AsyncService::RequestMouseAction &gt;</type>
        <definition>using quite::proto::MouseActionRPC = typedef agrpc::ServerRPC&lt;&amp;quite::proto::ProbeService::AsyncService::RequestMouseAction&gt;</definition>
        <argsstring></argsstring>
        <name>MouseActionRPC</name>
        <qualifiedname>quite::proto::MouseActionRPC</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/probe/rpc_mouse_injection.hpp" line="11" column="1" bodyfile="libs/protocol/src/probe/rpc_mouse_injection.hpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rpc__object__properties_8hpp_1a6151cf6f75ca76f275309ba57073215b" prot="public" static="no">
        <type>agrpc::ServerRPC&lt;&amp;quite::proto::ProbeService::AsyncService::RequestGetObjectProperties &gt;</type>
        <definition>using quite::proto::GetObjectPropertiesRPC = typedef agrpc::ServerRPC&lt;&amp;quite::proto::ProbeService::AsyncService::RequestGetObjectProperties&gt;</definition>
        <argsstring></argsstring>
        <name>GetObjectPropertiesRPC</name>
        <qualifiedname>quite::proto::GetObjectPropertiesRPC</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/probe/rpc_object_properties.hpp" line="12" column="1" bodyfile="libs/protocol/src/probe/rpc_object_properties.hpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rpc__set__object__property_8hpp_1a26860a75d7389eee54436ce228b097b8" prot="public" static="no">
        <type>agrpc::ServerRPC&lt;&amp;quite::proto::ProbeService::AsyncService::RequestSetObjectProperty &gt;</type>
        <definition>using quite::proto::SetObjectPropertyRPC = typedef agrpc::ServerRPC&lt;&amp;quite::proto::ProbeService::AsyncService::RequestSetObjectProperty&gt;</definition>
        <argsstring></argsstring>
        <name>SetObjectPropertyRPC</name>
        <qualifiedname>quite::proto::SetObjectPropertyRPC</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/probe/rpc_set_object_property.hpp" line="12" column="1" bodyfile="libs/protocol/src/probe/rpc_set_object_property.hpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rpc__snapshot_8hpp_1aa8bf9d23d32f7f77004ebe2d90b04360" prot="public" static="no">
        <type>agrpc::ServerRPC&lt;&amp;quite::proto::ProbeService::AsyncService::RequestCreateScreenshot &gt;</type>
        <definition>using quite::proto::RpcSnapshot = typedef agrpc::ServerRPC&lt;&amp;quite::proto::ProbeService::AsyncService::RequestCreateScreenshot&gt;</definition>
        <argsstring></argsstring>
        <name>RpcSnapshot</name>
        <qualifiedname>quite::proto::RpcSnapshot</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/probe/rpc_snapshot.hpp" line="10" column="1" bodyfile="libs/protocol/src/probe/rpc_snapshot.hpp" bodystart="10" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="configure__client__context_8cpp_1a34e8e38a59a97039169591f46e5df358" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void quite::proto::configure_client_context</definition>
        <argsstring>(grpc::ClientContext &amp;client_context)</argsstring>
        <name>configure_client_context</name>
        <qualifiedname>quite::proto::configure_client_context</qualifiedname>
        <param>
          <type>grpc::ClientContext &amp;</type>
          <declname>client_context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/client/configure_client_context.cpp" line="5" column="6" bodyfile="libs/protocol/src/client/configure_client_context.cpp" bodystart="5" bodyend="9" declfile="libs/protocol/src/client/configure_client_context.hpp" declline="6" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="error__helper_8cpp_1a43eb8262a77a39863303c0cee04482b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>grpc::Status</type>
        <definition>grpc::Status quite::proto::result2grpc_status</definition>
        <argsstring>(const Error &amp;error)</argsstring>
        <name>result2grpc_status</name>
        <qualifiedname>quite::proto::result2grpc_status</qualifiedname>
        <param>
          <type>const <ref refid="structquite_1_1Error" kindref="compound">Error</ref> &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/error_helper.cpp" line="4" column="14" bodyfile="libs/protocol/src/error_helper.cpp" bodystart="4" bodyend="31" declfile="libs/protocol/src/error_helper.hpp" declline="7" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="error__helper_8cpp_1ac4d57c741bd39fd4fbea182cbd02fff8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structquite_1_1Error" kindref="compound">Error</ref></type>
        <definition>Error quite::proto::grpc_status2result</definition>
        <argsstring>(const grpc::Status &amp;error)</argsstring>
        <name>grpc_status2result</name>
        <qualifiedname>quite::proto::grpc_status2result</qualifiedname>
        <param>
          <type>const grpc::Status &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/error_helper.cpp" line="33" column="7" bodyfile="libs/protocol/src/error_helper.cpp" bodystart="33" bodyend="73" declfile="libs/protocol/src/error_helper.hpp" declline="8" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="meta__converters_8cpp_1a97ed3910960b0cb2527a7313aedd8552" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>meta::PrimitiveType</type>
        <definition>meta::PrimitiveType quite::proto::from_protocol</definition>
        <argsstring>(const MetaPrimitiveType &amp;type)</argsstring>
        <name>from_protocol</name>
        <qualifiedname>quite::proto::from_protocol</qualifiedname>
        <param>
          <type>const MetaPrimitiveType &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/meta_converters.cpp" line="19" column="21" bodyfile="libs/protocol/src/meta_converters.cpp" bodystart="19" bodyend="44" declfile="libs/protocol/src/meta_converters.hpp" declline="6" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="meta__converters_8cpp_1afd5c642c2448826caa01eda35886127c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structquite_1_1meta_1_1ListType" kindref="compound">meta::ListType</ref></type>
        <definition>meta::ListType quite::proto::from_protocol</definition>
        <argsstring>(const MetaListType &amp;type)</argsstring>
        <name>from_protocol</name>
        <qualifiedname>quite::proto::from_protocol</qualifiedname>
        <param>
          <type>const MetaListType &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/meta_converters.cpp" line="46" column="16" bodyfile="libs/protocol/src/meta_converters.cpp" bodystart="46" bodyend="49" declfile="libs/protocol/src/meta_converters.hpp" declline="7" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="meta__converters_8cpp_1aaa4138a6e7d3661ecec7ae827704b09f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structquite_1_1meta_1_1MapType" kindref="compound">meta::MapType</ref></type>
        <definition>meta::MapType quite::proto::from_protocol</definition>
        <argsstring>(const MetaMapType &amp;type)</argsstring>
        <name>from_protocol</name>
        <qualifiedname>quite::proto::from_protocol</qualifiedname>
        <param>
          <type>const MetaMapType &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/meta_converters.cpp" line="51" column="15" bodyfile="libs/protocol/src/meta_converters.cpp" bodystart="51" bodyend="55" declfile="libs/protocol/src/meta_converters.hpp" declline="8" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="meta__converters_8cpp_1a1cc028788d5a3a6a174cb9ea4c1133c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>meta::ObjectTypePtr</type>
        <definition>meta::ObjectTypePtr quite::proto::from_protocol</definition>
        <argsstring>(const MetaObjectType &amp;type)</argsstring>
        <name>from_protocol</name>
        <qualifiedname>quite::proto::from_protocol</qualifiedname>
        <param>
          <type>const MetaObjectType &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/meta_converters.cpp" line="57" column="21" bodyfile="libs/protocol/src/meta_converters.cpp" bodystart="57" bodyend="73" declfile="libs/protocol/src/meta_converters.hpp" declline="9" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="meta__converters_8cpp_1a83f9e7c84ef906f8111b286f5149dd85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>meta::EnumTypePtr</type>
        <definition>meta::EnumTypePtr quite::proto::from_protocol</definition>
        <argsstring>(const MetaEnumType &amp;type)</argsstring>
        <name>from_protocol</name>
        <qualifiedname>quite::proto::from_protocol</qualifiedname>
        <param>
          <type>const MetaEnumType &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/meta_converters.cpp" line="75" column="19" bodyfile="libs/protocol/src/meta_converters.cpp" bodystart="75" bodyend="85" declfile="libs/protocol/src/meta_converters.hpp" declline="10" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="meta__converters_8cpp_1aa468596c6c1bc1ba1fba17747d6069cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void quite::proto::to_protocol</definition>
        <argsstring>(const meta::Type &amp;type, MetaType &amp;proto)</argsstring>
        <name>to_protocol</name>
        <qualifiedname>quite::proto::to_protocol</qualifiedname>
        <param>
          <type>const meta::Type &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>MetaType &amp;</type>
          <declname>proto</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/meta_converters.cpp" line="188" column="6" bodyfile="libs/protocol/src/meta_converters.cpp" bodystart="188" bodyend="191" declfile="libs/protocol/src/meta_converters.hpp" declline="12" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="rpc__fetch__windows_8cpp_1a541bf9c91b5799ab50688c7fd619d7f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>agrpc::detail::RPCHandlerSender&lt; GetViewsRPC, <ref refid="structquite_1_1proto_1_1GetViewsRpcHandler" kindref="compound">GetViewsRpcHandler</ref> &gt;</type>
        <definition>agrpc::detail::RPCHandlerSender&lt; GetViewsRPC, GetViewsRpcHandler &gt; quite::proto::make_rpc_fetch_windows</definition>
        <argsstring>(agrpc::GrpcContext &amp;grpc_context, quite::proto::ProbeService::AsyncService &amp;service, ProbeHandlerHandle probe_handler)</argsstring>
        <name>make_rpc_fetch_windows</name>
        <qualifiedname>quite::proto::make_rpc_fetch_windows</qualifiedname>
        <param>
          <type>agrpc::GrpcContext &amp;</type>
          <declname>grpc_context</declname>
        </param>
        <param>
          <type>quite::proto::ProbeService::AsyncService &amp;</type>
          <declname>service</declname>
        </param>
        <param>
          <type><ref refid="classquite_1_1ServiceHandle" kindref="compound">ProbeHandlerHandle</ref></type>
          <declname>probe_handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/probe/rpc_fetch_windows.cpp" line="27" column="33" bodyfile="libs/protocol/src/probe/rpc_fetch_windows.cpp" bodystart="27" bodyend="34" declfile="libs/protocol/src/probe/rpc_fetch_windows.hpp" declline="18" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rpc__find__object_8cpp_1a0a97478e5c6c041c8680e59530b6015a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>agrpc::detail::RPCHandlerSender&lt; FindObjectRPC, <ref refid="structquite_1_1proto_1_1FindObjectRpcHandler" kindref="compound">FindObjectRpcHandler</ref> &gt;</type>
        <definition>agrpc::detail::RPCHandlerSender&lt; FindObjectRPC, FindObjectRpcHandler &gt; quite::proto::make_rpc_find_object</definition>
        <argsstring>(agrpc::GrpcContext &amp;grpc_context, quite::proto::ProbeService::AsyncService &amp;service, ProbeHandlerHandle probe_handler, ServiceHandle&lt; ValueRegistry &gt; value_registry)</argsstring>
        <name>make_rpc_find_object</name>
        <qualifiedname>quite::proto::make_rpc_find_object</qualifiedname>
        <param>
          <type>agrpc::GrpcContext &amp;</type>
          <declname>grpc_context</declname>
        </param>
        <param>
          <type>quite::proto::ProbeService::AsyncService &amp;</type>
          <declname>service</declname>
        </param>
        <param>
          <type><ref refid="classquite_1_1ServiceHandle" kindref="compound">ProbeHandlerHandle</ref></type>
          <declname>probe_handler</declname>
        </param>
        <param>
          <type><ref refid="classquite_1_1ServiceHandle" kindref="compound">ServiceHandle</ref>&lt; <ref refid="classquite_1_1ValueRegistry" kindref="compound">ValueRegistry</ref> &gt;</type>
          <declname>value_registry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/probe/rpc_find_object.cpp" line="56" column="33" bodyfile="libs/protocol/src/probe/rpc_find_object.cpp" bodystart="56" bodyend="64" declfile="libs/protocol/src/probe/rpc_find_object.hpp" declline="20" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rpc__invoke__method_8cpp_1a869a42d470f8bcb77fa4288b4654c4af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>agrpc::detail::RPCHandlerSender&lt; InvokeMethodRPC, <ref refid="structquite_1_1proto_1_1InvokeMethodRpcHandler" kindref="compound">InvokeMethodRpcHandler</ref> &gt;</type>
        <definition>agrpc::detail::RPCHandlerSender&lt; InvokeMethodRPC, InvokeMethodRpcHandler &gt; quite::proto::make_rpc_invoke_method</definition>
        <argsstring>(agrpc::GrpcContext &amp;grpc_context, quite::proto::ProbeService::AsyncService &amp;service, ProbeHandlerHandle probe_handler, ServiceHandle&lt; ValueRegistry &gt; value_registry)</argsstring>
        <name>make_rpc_invoke_method</name>
        <qualifiedname>quite::proto::make_rpc_invoke_method</qualifiedname>
        <param>
          <type>agrpc::GrpcContext &amp;</type>
          <declname>grpc_context</declname>
        </param>
        <param>
          <type>quite::proto::ProbeService::AsyncService &amp;</type>
          <declname>service</declname>
        </param>
        <param>
          <type><ref refid="classquite_1_1ServiceHandle" kindref="compound">ProbeHandlerHandle</ref></type>
          <declname>probe_handler</declname>
        </param>
        <param>
          <type><ref refid="classquite_1_1ServiceHandle" kindref="compound">ServiceHandle</ref>&lt; <ref refid="classquite_1_1ValueRegistry" kindref="compound">ValueRegistry</ref> &gt;</type>
          <declname>value_registry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/probe/rpc_invoke_method.cpp" line="49" column="33" bodyfile="libs/protocol/src/probe/rpc_invoke_method.cpp" bodystart="49" bodyend="57" declfile="libs/protocol/src/probe/rpc_invoke_method.hpp" declline="20" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rpc__meta__find__type_8cpp_1a52516673df7b92aa3fac8a9ac58732e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>agrpc::detail::RPCHandlerSender&lt; FindTypeRPC, <ref refid="structquite_1_1proto_1_1GetMetaObjectRpcHandler" kindref="compound">GetMetaObjectRpcHandler</ref> &gt;</type>
        <definition>agrpc::detail::RPCHandlerSender&lt; FindTypeRPC, GetMetaObjectRpcHandler &gt; quite::proto::make_rpc_meta_find_type</definition>
        <argsstring>(agrpc::GrpcContext &amp;grpc_context, quite::proto::MetaService::AsyncService &amp;service, ServiceHandle&lt; meta::MetaRegistry &gt; meta_registry)</argsstring>
        <name>make_rpc_meta_find_type</name>
        <qualifiedname>quite::proto::make_rpc_meta_find_type</qualifiedname>
        <param>
          <type>agrpc::GrpcContext &amp;</type>
          <declname>grpc_context</declname>
        </param>
        <param>
          <type>quite::proto::MetaService::AsyncService &amp;</type>
          <declname>service</declname>
        </param>
        <param>
          <type><ref refid="classquite_1_1ServiceHandle" kindref="compound">ServiceHandle</ref>&lt; <ref refid="classquite_1_1meta_1_1MetaRegistry" kindref="compound">meta::MetaRegistry</ref> &gt;</type>
          <declname>meta_registry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/probe/rpc_meta_find_type.cpp" line="30" column="33" bodyfile="libs/protocol/src/probe/rpc_meta_find_type.cpp" bodystart="30" bodyend="37" declfile="libs/protocol/src/probe/rpc_meta_find_type.hpp" declline="19" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rpc__mouse__injection_8cpp_1a1cabad7bccb94ab5278e5fa749acee50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>agrpc::detail::RPCHandlerSender&lt; MouseActionRPC, <ref refid="structquite_1_1proto_1_1MouseActionRpcHandler" kindref="compound">MouseActionRpcHandler</ref> &gt;</type>
        <definition>agrpc::detail::RPCHandlerSender&lt; MouseActionRPC, MouseActionRpcHandler &gt; quite::proto::make_rpc_mouse_injection</definition>
        <argsstring>(agrpc::GrpcContext &amp;grpc_context, quite::proto::ProbeService::AsyncService &amp;service, ServiceHandle&lt; core::IMouseInjector &gt; mouse_injector)</argsstring>
        <name>make_rpc_mouse_injection</name>
        <qualifiedname>quite::proto::make_rpc_mouse_injection</qualifiedname>
        <param>
          <type>agrpc::GrpcContext &amp;</type>
          <declname>grpc_context</declname>
        </param>
        <param>
          <type>quite::proto::ProbeService::AsyncService &amp;</type>
          <declname>service</declname>
        </param>
        <param>
          <type><ref refid="classquite_1_1ServiceHandle" kindref="compound">ServiceHandle</ref>&lt; <ref refid="classquite_1_1core_1_1IMouseInjector" kindref="compound">core::IMouseInjector</ref> &gt;</type>
          <declname>mouse_injector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/probe/rpc_mouse_injection.cpp" line="96" column="33" bodyfile="libs/protocol/src/probe/rpc_mouse_injection.cpp" bodystart="96" bodyend="103" declfile="libs/protocol/src/probe/rpc_mouse_injection.hpp" declline="18" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rpc__object__properties_8cpp_1aed5f8451fc636cd6a54fdb50ff94140d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>agrpc::detail::RPCHandlerSender&lt; GetObjectPropertiesRPC, <ref refid="structquite_1_1proto_1_1GetObjectPropertiesRpcHandler" kindref="compound">GetObjectPropertiesRpcHandler</ref> &gt;</type>
        <definition>agrpc::detail::RPCHandlerSender&lt; GetObjectPropertiesRPC, GetObjectPropertiesRpcHandler &gt; quite::proto::make_rpc_fetch_object_properties</definition>
        <argsstring>(agrpc::GrpcContext &amp;grpc_context, quite::proto::ProbeService::AsyncService &amp;service, ProbeHandlerHandle probe_handler, ServiceHandle&lt; ValueRegistry &gt; value_registry)</argsstring>
        <name>make_rpc_fetch_object_properties</name>
        <qualifiedname>quite::proto::make_rpc_fetch_object_properties</qualifiedname>
        <param>
          <type>agrpc::GrpcContext &amp;</type>
          <declname>grpc_context</declname>
        </param>
        <param>
          <type>quite::proto::ProbeService::AsyncService &amp;</type>
          <declname>service</declname>
        </param>
        <param>
          <type><ref refid="classquite_1_1ServiceHandle" kindref="compound">ProbeHandlerHandle</ref></type>
          <declname>probe_handler</declname>
        </param>
        <param>
          <type><ref refid="classquite_1_1ServiceHandle" kindref="compound">ServiceHandle</ref>&lt; <ref refid="classquite_1_1ValueRegistry" kindref="compound">ValueRegistry</ref> &gt;</type>
          <declname>value_registry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/probe/rpc_object_properties.cpp" line="38" column="33" bodyfile="libs/protocol/src/probe/rpc_object_properties.cpp" bodystart="38" bodyend="46" declfile="libs/protocol/src/probe/rpc_object_properties.hpp" declline="20" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rpc__set__object__property_8cpp_1a2538833d1e479839b5a80b16e180de57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>agrpc::detail::RPCHandlerSender&lt; SetObjectPropertyRPC, <ref refid="structquite_1_1proto_1_1SetObjectPropertyRpcHandler" kindref="compound">SetObjectPropertyRpcHandler</ref> &gt;</type>
        <definition>agrpc::detail::RPCHandlerSender&lt; SetObjectPropertyRPC, SetObjectPropertyRpcHandler &gt; quite::proto::make_rpc_set_object_property</definition>
        <argsstring>(agrpc::GrpcContext &amp;grpc_context, quite::proto::ProbeService::AsyncService &amp;service, ProbeHandlerHandle probe_handler, ServiceHandle&lt; ValueRegistry &gt; value_registry)</argsstring>
        <name>make_rpc_set_object_property</name>
        <qualifiedname>quite::proto::make_rpc_set_object_property</qualifiedname>
        <param>
          <type>agrpc::GrpcContext &amp;</type>
          <declname>grpc_context</declname>
        </param>
        <param>
          <type>quite::proto::ProbeService::AsyncService &amp;</type>
          <declname>service</declname>
        </param>
        <param>
          <type><ref refid="classquite_1_1ServiceHandle" kindref="compound">ProbeHandlerHandle</ref></type>
          <declname>probe_handler</declname>
        </param>
        <param>
          <type><ref refid="classquite_1_1ServiceHandle" kindref="compound">ServiceHandle</ref>&lt; <ref refid="classquite_1_1ValueRegistry" kindref="compound">ValueRegistry</ref> &gt;</type>
          <declname>value_registry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/probe/rpc_set_object_property.cpp" line="31" column="33" bodyfile="libs/protocol/src/probe/rpc_set_object_property.cpp" bodystart="31" bodyend="39" declfile="libs/protocol/src/probe/rpc_set_object_property.hpp" declline="20" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="rpc__snapshot_8cpp_1a4be7d4fff4547dc1453e30cfd149aa0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>agrpc::detail::RPCHandlerSender&lt; RpcSnapshot, <ref refid="structquite_1_1proto_1_1SnapshotRpcHandler" kindref="compound">SnapshotRpcHandler</ref> &gt;</type>
        <definition>agrpc::detail::RPCHandlerSender&lt; RpcSnapshot, SnapshotRpcHandler &gt; quite::proto::make_rpc_snapshot</definition>
        <argsstring>(agrpc::GrpcContext &amp;grpc_context, quite::proto::ProbeService::AsyncService &amp;service, ProbeHandlerHandle probe_handler)</argsstring>
        <name>make_rpc_snapshot</name>
        <qualifiedname>quite::proto::make_rpc_snapshot</qualifiedname>
        <param>
          <type>agrpc::GrpcContext &amp;</type>
          <declname>grpc_context</declname>
        </param>
        <param>
          <type>quite::proto::ProbeService::AsyncService &amp;</type>
          <declname>service</declname>
        </param>
        <param>
          <type><ref refid="classquite_1_1ServiceHandle" kindref="compound">ProbeHandlerHandle</ref></type>
          <declname>probe_handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/probe/rpc_snapshot.cpp" line="42" column="33" bodyfile="libs/protocol/src/probe/rpc_snapshot.cpp" bodystart="42" bodyend="49" declfile="libs/protocol/src/probe/rpc_snapshot.hpp" declline="17" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="value_8cpp_1ab6015398e93307d791a56773560ca871" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Value</type>
        <definition>Value quite::proto::create_value</definition>
        <argsstring>(const ValueRegistry &amp;value_registry, const entt::meta_any &amp;any)</argsstring>
        <name>create_value</name>
        <qualifiedname>quite::proto::create_value</qualifiedname>
        <param>
          <type>const <ref refid="classquite_1_1ValueRegistry" kindref="compound">ValueRegistry</ref> &amp;</type>
          <declname>value_registry</declname>
        </param>
        <param>
          <type>const entt::meta_any &amp;</type>
          <declname>any</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/value.cpp" line="23" column="7" bodyfile="libs/protocol/src/value.cpp" bodystart="23" bodyend="53" declfile="libs/protocol/src/value.hpp" declline="9" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="value_8cpp_1a68471d34205203940c8dcd62a778f493" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>entt::meta_any</type>
        <definition>entt::meta_any quite::proto::convert_value</definition>
        <argsstring>(const ValueRegistry &amp;value_registry, const IValueConverter &amp;converter, const Value &amp;value)</argsstring>
        <name>convert_value</name>
        <qualifiedname>quite::proto::convert_value</qualifiedname>
        <param>
          <type>const <ref refid="classquite_1_1ValueRegistry" kindref="compound">ValueRegistry</ref> &amp;</type>
          <declname>value_registry</declname>
        </param>
        <param>
          <type>const <ref refid="classquite_1_1proto_1_1IValueConverter" kindref="compound">IValueConverter</ref> &amp;</type>
          <declname>converter</declname>
        </param>
        <param>
          <type>const Value &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/value.cpp" line="55" column="16" bodyfile="libs/protocol/src/value.cpp" bodystart="55" bodyend="107" declfile="libs/protocol/src/value.hpp" declline="10" declcolumn="16"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/protocol/include/quite/proto/client/client.hpp" line="8" column="1"/>
  </compounddef>
</doxygen>
