<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structquite_1_1proto_1_1ProtocolVisitor" kind="struct" language="C++" prot="public">
    <compoundname>quite::proto::ProtocolVisitor</compoundname>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structquite_1_1proto_1_1ProtocolVisitor_1a43ca9bcd1629609d5a0cbd7a375d3a0f" prot="public" static="no" mutable="no">
        <type>MetaType &amp;</type>
        <definition>MetaType&amp; quite::proto::ProtocolVisitor::proto</definition>
        <argsstring></argsstring>
        <name>proto</name>
        <qualifiedname>quite::proto::ProtocolVisitor::proto</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/meta_converters.cpp" line="89" column="14" bodyfile="libs/protocol/src/meta_converters.cpp" bodystart="89" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structquite_1_1proto_1_1ProtocolVisitor_1ac2119932da9714b928e5722bc08b5541" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void quite::proto::ProtocolVisitor::operator()</definition>
        <argsstring>(const meta::PrimitiveType &amp;meta)</argsstring>
        <name>operator()</name>
        <qualifiedname>quite::proto::ProtocolVisitor::operator()</qualifiedname>
        <param>
          <type>const meta::PrimitiveType &amp;</type>
          <declname>meta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/meta_converters.cpp" line="91" column="10" bodyfile="libs/protocol/src/meta_converters.cpp" bodystart="91" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="structquite_1_1proto_1_1ProtocolVisitor_1acd796107423276479d1637d344bfcfe9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void quite::proto::ProtocolVisitor::operator()</definition>
        <argsstring>(const meta::ListType &amp;meta)</argsstring>
        <name>operator()</name>
        <qualifiedname>quite::proto::ProtocolVisitor::operator()</qualifiedname>
        <param>
          <type>const <ref refid="structquite_1_1meta_1_1ListType" kindref="compound">meta::ListType</ref> &amp;</type>
          <declname>meta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/meta_converters.cpp" line="122" column="10" bodyfile="libs/protocol/src/meta_converters.cpp" bodystart="122" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="structquite_1_1proto_1_1ProtocolVisitor_1acd75041e65a971e5ec33ce90b17ca457" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void quite::proto::ProtocolVisitor::operator()</definition>
        <argsstring>(const meta::MapType &amp;meta)</argsstring>
        <name>operator()</name>
        <qualifiedname>quite::proto::ProtocolVisitor::operator()</qualifiedname>
        <param>
          <type>const <ref refid="structquite_1_1meta_1_1MapType" kindref="compound">meta::MapType</ref> &amp;</type>
          <declname>meta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/meta_converters.cpp" line="130" column="10" bodyfile="libs/protocol/src/meta_converters.cpp" bodystart="130" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="structquite_1_1proto_1_1ProtocolVisitor_1a3568564f3440b2abf5adfad8bbfaa6cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void quite::proto::ProtocolVisitor::operator()</definition>
        <argsstring>(const meta::EnumTypePtr &amp;meta)</argsstring>
        <name>operator()</name>
        <qualifiedname>quite::proto::ProtocolVisitor::operator()</qualifiedname>
        <param>
          <type>const meta::EnumTypePtr &amp;</type>
          <declname>meta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/meta_converters.cpp" line="139" column="10" bodyfile="libs/protocol/src/meta_converters.cpp" bodystart="139" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="structquite_1_1proto_1_1ProtocolVisitor_1a444e79263e92639e6c1d87694c0e39e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void quite::proto::ProtocolVisitor::operator()</definition>
        <argsstring>(const meta::ObjectTypePtr &amp;meta)</argsstring>
        <name>operator()</name>
        <qualifiedname>quite::proto::ProtocolVisitor::operator()</qualifiedname>
        <param>
          <type>const meta::ObjectTypePtr &amp;</type>
          <declname>meta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/meta_converters.cpp" line="150" column="10" bodyfile="libs/protocol/src/meta_converters.cpp" bodystart="150" bodyend="185"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/protocol/src/meta_converters.cpp" line="87" column="1" bodyfile="libs/protocol/src/meta_converters.cpp" bodystart="88" bodyend="186"/>
    <listofallmembers>
      <member refid="structquite_1_1proto_1_1ProtocolVisitor_1ac2119932da9714b928e5722bc08b5541" prot="public" virt="non-virtual"><scope>quite::proto::ProtocolVisitor</scope><name>operator()</name></member>
      <member refid="structquite_1_1proto_1_1ProtocolVisitor_1acd796107423276479d1637d344bfcfe9" prot="public" virt="non-virtual"><scope>quite::proto::ProtocolVisitor</scope><name>operator()</name></member>
      <member refid="structquite_1_1proto_1_1ProtocolVisitor_1acd75041e65a971e5ec33ce90b17ca457" prot="public" virt="non-virtual"><scope>quite::proto::ProtocolVisitor</scope><name>operator()</name></member>
      <member refid="structquite_1_1proto_1_1ProtocolVisitor_1a3568564f3440b2abf5adfad8bbfaa6cb" prot="public" virt="non-virtual"><scope>quite::proto::ProtocolVisitor</scope><name>operator()</name></member>
      <member refid="structquite_1_1proto_1_1ProtocolVisitor_1a444e79263e92639e6c1d87694c0e39e2" prot="public" virt="non-virtual"><scope>quite::proto::ProtocolVisitor</scope><name>operator()</name></member>
      <member refid="structquite_1_1proto_1_1ProtocolVisitor_1a43ca9bcd1629609d5a0cbd7a375d3a0f" prot="public" virt="non-virtual"><scope>quite::proto::ProtocolVisitor</scope><name>proto</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
