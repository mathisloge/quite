<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structquite_1_1proto_1_1MouseActionRpcHandler" kind="struct" language="C++" prot="public">
    <compoundname>quite::proto::MouseActionRpcHandler</compoundname>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structquite_1_1proto_1_1MouseActionRpcHandler_1afb8f850b784b68927148a1a948ed3299" prot="public" static="no" mutable="no">
        <type><ref refid="classquite_1_1ServiceHandle" kindref="compound">ServiceHandle</ref>&lt; <ref refid="classquite_1_1core_1_1IMouseInjector" kindref="compound">core::IMouseInjector</ref> &gt;</type>
        <definition>ServiceHandle&lt;core::IMouseInjector&gt; quite::proto::MouseActionRpcHandler::mouse_injector</definition>
        <argsstring></argsstring>
        <name>mouse_injector</name>
        <qualifiedname>quite::proto::MouseActionRpcHandler::mouse_injector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/probe/rpc_mouse_injection.hpp" line="14" column="19" bodyfile="libs/protocol/src/probe/rpc_mouse_injection.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structquite_1_1proto_1_1MouseActionRpcHandler_1aed8703c306c50dcb6069ccf66f4a3993" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>exec::task&lt; void &gt;</type>
        <definition>exec::task&lt; void &gt; quite::proto::MouseActionRpcHandler::operator()</definition>
        <argsstring>(MouseActionRPC &amp;, const MouseActionRPC::Request &amp;) const</argsstring>
        <name>operator()</name>
        <qualifiedname>quite::proto::MouseActionRpcHandler::operator()</qualifiedname>
        <param>
          <type>MouseActionRPC &amp;</type>
          <defname>rpc</defname>
        </param>
        <param>
          <type>const MouseActionRPC::Request &amp;</type>
          <defname>request</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/probe/rpc_mouse_injection.hpp" line="15" column="16" bodyfile="libs/protocol/src/probe/rpc_mouse_injection.cpp" bodystart="80" bodyend="94"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>quite::ServiceHandle&lt; quite::core::IMouseInjector &gt;</label>
        <link refid="classquite_1_1ServiceHandle"/>
      </node>
      <node id="1">
        <label>quite::proto::MouseActionRpcHandler</label>
        <link refid="structquite_1_1proto_1_1MouseActionRpcHandler"/>
        <childnode refid="2" relation="usage">
          <edgelabel>mouse_injector</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libs/protocol/src/probe/rpc_mouse_injection.hpp" line="12" column="1" bodyfile="libs/protocol/src/probe/rpc_mouse_injection.hpp" bodystart="13" bodyend="16"/>
    <listofallmembers>
      <member refid="structquite_1_1proto_1_1MouseActionRpcHandler_1afb8f850b784b68927148a1a948ed3299" prot="public" virt="non-virtual"><scope>quite::proto::MouseActionRpcHandler</scope><name>mouse_injector</name></member>
      <member refid="structquite_1_1proto_1_1MouseActionRpcHandler_1aed8703c306c50dcb6069ccf66f4a3993" prot="public" virt="non-virtual"><scope>quite::proto::MouseActionRpcHandler</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
