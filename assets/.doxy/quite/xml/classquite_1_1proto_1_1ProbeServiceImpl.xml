<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classquite_1_1proto_1_1ProbeServiceImpl" kind="class" language="C++" prot="public" final="yes">
    <compoundname>quite::proto::ProbeServiceImpl</compoundname>
    <basecompoundref refid="classquite_1_1proto_1_1IProbeService" prot="public" virt="non-virtual">quite::proto::IProbeService</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classquite_1_1proto_1_1ProbeServiceImpl_1a6283bb182628facdf227d84e41c36443" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; agrpc::GrpcContext &gt;</type>
        <definition>std::shared_ptr&lt;agrpc::GrpcContext&gt; quite::proto::ProbeServiceImpl::grpc_context_</definition>
        <argsstring></argsstring>
        <name>grpc_context_</name>
        <qualifiedname>quite::proto::ProbeServiceImpl::grpc_context_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/client/probe_service_impl.hpp" line="27" column="21" bodyfile="libs/protocol/src/client/probe_service_impl.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classquite_1_1proto_1_1ProbeServiceImpl_1a4d877aededb459eb94c82f8cbc6d262c" prot="private" static="no" mutable="no">
        <type>ProbeService::Stub &amp;</type>
        <definition>ProbeService::Stub&amp; quite::proto::ProbeServiceImpl::probe_service_stub_</definition>
        <argsstring></argsstring>
        <name>probe_service_stub_</name>
        <qualifiedname>quite::proto::ProbeServiceImpl::probe_service_stub_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/client/probe_service_impl.hpp" line="28" column="24" bodyfile="libs/protocol/src/client/probe_service_impl.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classquite_1_1proto_1_1ProbeServiceImpl_1a0708e6556e1e4f4cc22f5d97ddf55326" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classquite_1_1proto_1_1IValueConverter" kindref="compound">IValueConverter</ref> &gt;</type>
        <definition>std::shared_ptr&lt;IValueConverter&gt; quite::proto::ProbeServiceImpl::value_converter_</definition>
        <argsstring></argsstring>
        <name>value_converter_</name>
        <qualifiedname>quite::proto::ProbeServiceImpl::value_converter_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/client/probe_service_impl.hpp" line="29" column="21" bodyfile="libs/protocol/src/client/probe_service_impl.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classquite_1_1proto_1_1ProbeServiceImpl_1af0096816a08bc423afd475bcde99f879" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>quite::proto::ProbeServiceImpl::ProbeServiceImpl</definition>
        <argsstring>(std::shared_ptr&lt; agrpc::GrpcContext &gt; grpc_context, ProbeService::Stub &amp;probe_service_stub, std::shared_ptr&lt; IValueConverter &gt; value_converter)</argsstring>
        <name>ProbeServiceImpl</name>
        <qualifiedname>quite::proto::ProbeServiceImpl::ProbeServiceImpl</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; agrpc::GrpcContext &gt;</type>
          <declname>grpc_context</declname>
        </param>
        <param>
          <type>ProbeService::Stub &amp;</type>
          <declname>probe_service_stub</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classquite_1_1proto_1_1IValueConverter" kindref="compound">IValueConverter</ref> &gt;</type>
          <declname>value_converter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/client/probe_service_impl.hpp" line="12" column="14" bodyfile="libs/protocol/src/client/probe_service_impl.cpp" bodystart="27" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classquite_1_1proto_1_1ProbeServiceImpl_1aba0c59004af4c227d7a11539f931bdb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>AsyncResult&lt; <ref refid="classquite_1_1Image" kindref="compound">Image</ref> &gt;</type>
        <definition>AsyncResult&lt; Image &gt; quite::proto::ProbeServiceImpl::take_snapshot</definition>
        <argsstring>(ObjectId id) override</argsstring>
        <name>take_snapshot</name>
        <qualifiedname>quite::proto::ProbeServiceImpl::take_snapshot</qualifiedname>
        <reimplements refid="classquite_1_1proto_1_1IProbeService_1a7f8e44e4e9759f530985836aeb78e633">take_snapshot</reimplements>
        <param>
          <type>ObjectId</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/client/probe_service_impl.hpp" line="16" column="17" bodyfile="libs/protocol/src/client/probe_service_impl.cpp" bodystart="35" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classquite_1_1proto_1_1ProbeServiceImpl_1a96ae40966236162318b3872d4fb3d717" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>AsyncResult&lt; <ref refid="structquite_1_1ObjectReference" kindref="compound">ObjectReference</ref> &gt;</type>
        <definition>AsyncResult&lt; ObjectReference &gt; quite::proto::ProbeServiceImpl::find_object</definition>
        <argsstring>(ObjectQuery serach_query) override</argsstring>
        <name>find_object</name>
        <qualifiedname>quite::proto::ProbeServiceImpl::find_object</qualifiedname>
        <reimplements refid="classquite_1_1proto_1_1IProbeService_1a30f33cbbe3a2eeb1d26fff47c1e5ac0e">find_object</reimplements>
        <param>
          <type><ref refid="structquite_1_1ObjectQuery" kindref="compound">ObjectQuery</ref></type>
          <declname>serach_query</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/client/probe_service_impl.hpp" line="17" column="17" bodyfile="libs/protocol/src/client/probe_service_impl.cpp" bodystart="73" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classquite_1_1proto_1_1ProbeServiceImpl_1a3ff5b998023e6554136735dfd49ddd49" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>AsyncResult&lt; std::unordered_map&lt; std::string, entt::meta_any &gt; &gt;</type>
        <definition>AsyncResult&lt; std::unordered_map&lt; std::string, entt::meta_any &gt; &gt; quite::proto::ProbeServiceImpl::get_object_properties</definition>
        <argsstring>(ObjectId object_id, std::vector&lt; std::string &gt; properties) override</argsstring>
        <name>get_object_properties</name>
        <qualifiedname>quite::proto::ProbeServiceImpl::get_object_properties</qualifiedname>
        <reimplements refid="classquite_1_1proto_1_1IProbeService_1a8fa3da61984699d8cf16924fc29145a6">get_object_properties</reimplements>
        <param>
          <type>ObjectId</type>
          <declname>object_id</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>properties</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/client/probe_service_impl.hpp" line="18" column="17" bodyfile="libs/protocol/src/client/probe_service_impl.cpp" bodystart="93" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classquite_1_1proto_1_1ProbeServiceImpl_1af5e4d226f5f6041bb93621ba7026ee60" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>AsyncResult&lt; void &gt;</type>
        <definition>AsyncResult&lt; void &gt; quite::proto::ProbeServiceImpl::set_object_property</definition>
        <argsstring>(ObjectId object_id, std::string property, entt::meta_any value) override</argsstring>
        <name>set_object_property</name>
        <qualifiedname>quite::proto::ProbeServiceImpl::set_object_property</qualifiedname>
        <reimplements refid="classquite_1_1proto_1_1IProbeService_1a9ecfc2c0d9bc0b77ca25a5f45d58d956">set_object_property</reimplements>
        <param>
          <type>ObjectId</type>
          <declname>object_id</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property</declname>
        </param>
        <param>
          <type>entt::meta_any</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/client/probe_service_impl.hpp" line="20" column="17" bodyfile="libs/protocol/src/client/probe_service_impl.cpp" bodystart="123" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classquite_1_1proto_1_1ProbeServiceImpl_1ab4d0615b7e62732e65f68e0f34763585" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>AsyncResult&lt; std::vector&lt; <ref refid="structquite_1_1ObjectReference" kindref="compound">ObjectReference</ref> &gt; &gt;</type>
        <definition>AsyncResult&lt; std::vector&lt; ObjectReference &gt; &gt; quite::proto::ProbeServiceImpl::query_top_level_views</definition>
        <argsstring>() override</argsstring>
        <name>query_top_level_views</name>
        <qualifiedname>quite::proto::ProbeServiceImpl::query_top_level_views</qualifiedname>
        <reimplements refid="classquite_1_1proto_1_1IProbeService_1a3d45959f553d326708041039c24818f8">query_top_level_views</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/client/probe_service_impl.hpp" line="21" column="17" bodyfile="libs/protocol/src/client/probe_service_impl.cpp" bodystart="143" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classquite_1_1proto_1_1ProbeServiceImpl_1a98aa3623735e9ca67f0c68f06c76e13b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>AsyncResult&lt; entt::meta_any &gt;</type>
        <definition>AsyncResult&lt; entt::meta_any &gt; quite::proto::ProbeServiceImpl::invoke_method</definition>
        <argsstring>(ObjectId id, std::string method_name, std::vector&lt; entt::meta_any &gt; parameters) override</argsstring>
        <name>invoke_method</name>
        <qualifiedname>quite::proto::ProbeServiceImpl::invoke_method</qualifiedname>
        <reimplements refid="classquite_1_1proto_1_1IProbeService_1ab63391d32d4df97607a09487873d2b91">invoke_method</reimplements>
        <param>
          <type>ObjectId</type>
          <declname>id</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>method_name</declname>
        </param>
        <param>
          <type>std::vector&lt; entt::meta_any &gt;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/protocol/src/client/probe_service_impl.hpp" line="22" column="17" bodyfile="libs/protocol/src/client/probe_service_impl.cpp" bodystart="164" bodyend="193"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>quite::proto::IProbeService</label>
        <link refid="classquite_1_1proto_1_1IProbeService"/>
      </node>
      <node id="1">
        <label>quite::proto::ProbeServiceImpl</label>
        <link refid="classquite_1_1proto_1_1ProbeServiceImpl"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>quite::proto::IProbeService</label>
        <link refid="classquite_1_1proto_1_1IProbeService"/>
      </node>
      <node id="1">
        <label>quite::proto::ProbeServiceImpl</label>
        <link refid="classquite_1_1proto_1_1ProbeServiceImpl"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libs/protocol/src/client/probe_service_impl.hpp" line="9" column="1" bodyfile="libs/protocol/src/client/probe_service_impl.hpp" bodystart="10" bodyend="30"/>
    <listofallmembers>
      <member refid="classquite_1_1proto_1_1ProbeServiceImpl_1a96ae40966236162318b3872d4fb3d717" prot="public" virt="virtual"><scope>quite::proto::ProbeServiceImpl</scope><name>find_object</name></member>
      <member refid="classquite_1_1proto_1_1ProbeServiceImpl_1a3ff5b998023e6554136735dfd49ddd49" prot="public" virt="virtual"><scope>quite::proto::ProbeServiceImpl</scope><name>get_object_properties</name></member>
      <member refid="classquite_1_1proto_1_1ProbeServiceImpl_1a6283bb182628facdf227d84e41c36443" prot="private" virt="non-virtual"><scope>quite::proto::ProbeServiceImpl</scope><name>grpc_context_</name></member>
      <member refid="classquite_1_1proto_1_1ProbeServiceImpl_1a98aa3623735e9ca67f0c68f06c76e13b" prot="public" virt="virtual"><scope>quite::proto::ProbeServiceImpl</scope><name>invoke_method</name></member>
      <member refid="classquite_1_1proto_1_1ProbeServiceImpl_1a4d877aededb459eb94c82f8cbc6d262c" prot="private" virt="non-virtual"><scope>quite::proto::ProbeServiceImpl</scope><name>probe_service_stub_</name></member>
      <member refid="classquite_1_1proto_1_1ProbeServiceImpl_1af0096816a08bc423afd475bcde99f879" prot="public" virt="non-virtual"><scope>quite::proto::ProbeServiceImpl</scope><name>ProbeServiceImpl</name></member>
      <member refid="classquite_1_1proto_1_1ProbeServiceImpl_1ab4d0615b7e62732e65f68e0f34763585" prot="public" virt="virtual"><scope>quite::proto::ProbeServiceImpl</scope><name>query_top_level_views</name></member>
      <member refid="classquite_1_1proto_1_1ProbeServiceImpl_1af5e4d226f5f6041bb93621ba7026ee60" prot="public" virt="virtual"><scope>quite::proto::ProbeServiceImpl</scope><name>set_object_property</name></member>
      <member refid="classquite_1_1proto_1_1ProbeServiceImpl_1aba0c59004af4c227d7a11539f931bdb1" prot="public" virt="virtual"><scope>quite::proto::ProbeServiceImpl</scope><name>take_snapshot</name></member>
      <member refid="classquite_1_1proto_1_1ProbeServiceImpl_1a0708e6556e1e4f4cc22f5d97ddf55326" prot="private" virt="non-virtual"><scope>quite::proto::ProbeServiceImpl</scope><name>value_converter_</name></member>
      <member refid="classquite_1_1proto_1_1IProbeService_1a00d58e6056651737c590e2c6b3c05060" prot="public" virt="virtual"><scope>quite::proto::ProbeServiceImpl</scope><name>~IProbeService</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
