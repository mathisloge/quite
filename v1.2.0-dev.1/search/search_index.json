{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>For full documentation visit github.com/mathisloge/quite.</p>"},{"location":"contributing/","title":"Contributing","text":""},{"location":"contributing/#got-a-question-or-problem","title":"Got a Question or Problem?","text":"<p>Do not open issues for general support questions as I want to keep GitHub issues for bug reports and feature requests. If you are a company, you can reach out to <code>support@quite.rocks</code> to acquire a support contract or use the discussions section.</p> <p>To save your and my time, I will systematically close all issues that are requests for general support and redirect you to <code>support@quite.rocks</code> or the discussions section.</p>"},{"location":"contributing/#found-a-bug","title":"Found a Bug?","text":"<p>If you find a bug in the source code, you can help me by submitting an issue to the GitHub Repository.</p>"},{"location":"contributing/#submitting-a-pull-request-pr","title":"Submitting a Pull Request (PR)","text":"<p>Before you start on working on a larger fix or feature, please get in touch with me via the GitHub Issue Tracker to streamline any work.</p>"},{"location":"contributing/#coding-rules","title":"Coding Rules","text":"<p>To ensure consistency throughout the source code, keep these rules in mind as you are working:</p> <ul> <li>Follow the \"Commit Message Format\"</li> <li>Add tests</li> <li>TBD</li> </ul>"},{"location":"contributing/#commit-message-format","title":"Commit Message Format","text":"<p>I'm using the angular commit message format.</p> <p>The types should be used as described.</p>"},{"location":"contributing/#scope","title":"Scope","text":"<ul> <li>protocol</li> <li>python</li> <li>remote-manager</li> <li>client</li> <li>core</li> <li>manager</li> <li>probe</li> <li>probeqt</li> <li>testing</li> <li>examples (note: this is currently the <code>integration_test</code>)</li> </ul>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2025/07/27/hello-world-/","title":"Hello world \ud83c\udf89","text":"<p>I\u2019m excited to introduce quite, an open\u2011source C++ library with python bindings designed to make end\u2011to\u2011end UI testing in Qt feel\u2026 well, not quite so painful.</p> <p>Originally, I planned to release it a bit later, but I now want to test my own applications \u2014 and it\u2019s far easier if the library is already public. \ud83d\ude04</p> <p>For now it's just Qt but I hope that the project is ready to take on other UI frameworks as well. Time will tell.</p>"},{"location":"blog/2025/07/27/hello-world-/#what-does-quite-do","title":"What does quite do?","text":"<p>At its core, quite lets you automate and inspect an application running on any device where you\u2019ve installed a small \u201cremote manager\u201d daemon. From your test code, you can:</p> <ul> <li>Discover any object in the running app and inspect its class name, methods, and properties via the built-in meta-object system (either registered with Qt's meta-system or the one provided by the library)</li> <li>Invoke methods dynamically</li> <li>Read and wait on property values, with configurable timeouts</li> <li>Write values to objects</li> <li>Capture screenshots of individual objects and compare them against reference images</li> <li>Write tests in either C++ or Python, using the same API</li> </ul> <p>This marks the initial release.</p> <p>If you have any questions, feel free to leave a comment below. Bugs or issues can be reported via the GitHub issue tracker.</p> <p>I hope this project proves useful and contributes to improving and stabilizing your application. \ud83c\udf89</p>"},{"location":"blog/archive/2025/","title":"2025","text":""},{"location":"blog/category/general/","title":"General","text":""}]}